<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// prepare data 
var player_count = instance_number(obj_player);
times[] = 0;
players[] = 0;
for (i = 0; i &lt; player_count; i++) {
    players[i] = instance_find(obj_player, i);
    times[i] = players[i].cumulative_time;
}
// Bubble sort
for (i = 1; i &lt; array_length_1d(times); i++) {
    var a = times[i - 1];
    var p1 = players[i - 1];
    var b = times[i];
    var p2 = players[i];
    if (a &gt; b) {
        times[i - 1] = b;
        players[i - 1] = p2;
        times[i] = a;
        players[i] = p1;
    }
}

var width = 400;
var height = 600;
var x_pos = window_get_width() / 2 - width/2;
var y_pos = 20;
var padding = 10;

draw_set_color(c_black);
draw_rectangle(x_pos, y_pos, x_pos + width, y_pos + height, false);
x_pos += 10;
y_pos += 10;

// Label
var text = "Highscore:"
draw_set_color(c_white);
draw_text(x_pos, y_pos, text);
y_pos += 5 + string_height(text); 
// Draw scores
for (i = 0; i &lt; player_count; i++) {
    var ms = round(times[i] % 1000);
    var s = round(times[i] / 1000);
    var text = "Player " + string(i) + " - Time: " + string(s) + ":" + string(ms); 
    var text_height = string_height(text);
    draw_set_color(players[i].playercolour);
    draw_ellipse(x_pos, y_pos, x_pos + text_height, y_pos + text_height, false);
    draw_text(x_pos + text_height + 5, y_pos, text);
    y_pos += 5 + text_height;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
